require 'readline'
require 'pathname'
require 'fileutils'
require 'os'

if OS.mac?
  # Homebrew installation
  puts 'Checking for Homebrew...'
  unless system 'which brew'
    puts 'Installing Homebrew...'
    unless system '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"'
      raise 'Error installing homebrew.'
    end
    puts '...success!'
  else
    puts 'Homebrew already installed.'
  end

  puts 'Tapping brew-bundle...'
  unless system 'brew tap Homebrew/bundle'
    raise 'Error tapping Homebrew/bundle.'
  end
  puts '...success!'

  # Brewfile installation
  puts 'Installing Brewfile bundle...'
  unless system 'brew bundle install -v'
    raise 'Error installing Brewfile bundle.'
  end
  puts '...success!'

  # Mac App Store apps
  puts 'Installing Mac App Store apps...'
  unless system 'bash ./mac/mac-app-store.sh'
    raise 'Error installing Mac App Store applications.'
  end
  puts '...success!'

  # VSCode extensions
  puts 'Installing VSCode extensions...'
  unless system 'bash ./mac/vscode-extensions.sh'
    raise 'Error installing VSCode extensions.'
  end
  puts '...success!'

  # Install fonts
  puts 'Installing fonts...'
  FileUtils.cp Dir.glob('./vendor/inconsolata/fonts/otf/*.otf'), "#{Dir.home}/Library/Fonts/"

  # macOS system settings
  puts 'Applying Mac system settings...'
  unless system 'bash ./mac/system-settings.sh'
    raise 'Error applying system settings'
  end
  puts '...success!'

  # iTerm 2 preferences
  puts 'Configuring iTerm2 preferences...'
  unless system 'defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/.homesick/repos/dotfiles/preferences"'
    raise 'Error setting iTerm2 custom preferences location'
  end

  unless system 'defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true'
    raise 'Error setting iTerm2 preferences to load from custom folder'
  end
  puts '...success!'

  # gnupg pinentry-mac
  puts 'Configuring gnupg...'
  homebrew_pinentry_mac_path=`brew --prefix pinentry-mac`.strip
  system "echo \"pinentry-program #{homebrew_pinentry_mac_path}/bin/pinentry-mac\" >> ~/.gnupg/gpg-agent.conf"
  puts '...success!'
end

# zsh as default shell
puts 'Setting zsh as default shell...'
if OS.mac?
  homebrew_zsh_path=`brew --prefix zsh`.strip + '/bin/zsh'
  system "sudo sh -c 'echo \"#{homebrew_zsh_path}\" >> /etc/shells'"
  system "chsh -s \"#{homebrew_zsh_path}\""
else
  system 'chsh -s /bin/zsh'
end
puts '...success!'

# oh-my-zsh installation
puts 'Checking for oh-my-zsh...'
ohmyzsh_path = Pathname.new "#{Dir.home}/.oh-my-zsh"
unless ohmyzsh_path.exist?
  puts 'Installing oh-my-zsh...'
  unless system 'git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh'
    raise 'Error installing oh-my-zsh'
  end
  system 'chmod g-w,o-w ~/.oh-my-zsh'
  puts '...success!'
else
  puts 'oh-my-zsh already installed.'
end

# git user info
puts 'Configuring git user info...'
email = Readline.readline('Email address: ')
unless system "git config --file ~/.gitconfig-private user.email #{email}"
  raise 'Error setting email address in git.'
end
puts '...success!'
